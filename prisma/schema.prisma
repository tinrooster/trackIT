generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model asset {
  id                 String           @id
  name               String
  assignedToId       String?
  barcode            String           @unique(map: "Asset_barcode_key")
  createdAt          DateTime         @default(now())
  lastMaintenance    DateTime?
  locationId         String
  nextMaintenance    DateTime?
  notes              String?
  projectId          String?
  purchaseDate       DateTime
  serialNumber       String           @unique(map: "Asset_serialNumber_key")
  status             String           @default("AVAILABLE")
  type               String
  updatedAt          DateTime
  warrantyExpiration DateTime?
  user               user?            @relation(fields: [assignedToId], references: [id], map: "Asset_assignedToId_fkey")
  location           location         @relation(fields: [locationId], references: [id], map: "Asset_locationId_fkey")
  project            project?         @relation(fields: [projectId], references: [id], map: "Asset_projectId_fkey")
  maintenancelog     maintenancelog[]
  transaction        transaction[]

  @@index([assignedToId], map: "Asset_assignedToId_fkey")
  @@index([locationId], map: "Asset_locationId_fkey")
  @@index([projectId], map: "Asset_projectId_fkey")
}

model consumable {
  id           String   @id
  name         String
  quantity     Int      @default(0)
  reorderLevel Int      @default(0)
  createdAt    DateTime @default(now())
  updatedAt    DateTime
  locationId   String
  location     location @relation(fields: [locationId], references: [id], map: "Consumable_locationId_fkey")

  @@index([locationId], map: "Consumable_locationId_fkey")
}

model location {
  id               String       @id
  name             String
  type             String
  description      String?
  createdAt        DateTime     @default(now())
  updatedAt        DateTime
  parentLocationId String?
  order            Int?
  asset            asset[]
  consumable       consumable[]
  location         location?    @relation("locationTolocation", fields: [parentLocationId], references: [id], map: "Location_parentLocationId_fkey")
  other_location   location[]   @relation("locationTolocation")

  @@index([parentLocationId], map: "Location_parentLocationId_fkey")
}

model maintenancelog {
  id                  String    @id
  description         String
  cost                Float?
  date                DateTime
  nextMaintenanceDate DateTime?
  createdAt           DateTime  @default(now())
  assetId             String
  performedById       String
  asset               asset     @relation(fields: [assetId], references: [id], map: "MaintenanceLog_assetId_fkey")
  user                user      @relation(fields: [performedById], references: [id], map: "MaintenanceLog_performedById_fkey")

  @@index([assetId], map: "MaintenanceLog_assetId_fkey")
  @@index([performedById], map: "MaintenanceLog_performedById_fkey")
}

model project {
  id          String    @id
  name        String
  description String?
  status      String    @default("PLANNED")
  startDate   DateTime?
  endDate     DateTime?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime
  order       Int?
  asset       asset[]
}

model transaction {
  id        String    @id
  type      String
  dueDate   DateTime?
  notes     String?
  createdAt DateTime  @default(now())
  assetId   String
  userId    String
  asset     asset     @relation(fields: [assetId], references: [id], map: "Transaction_assetId_fkey")
  user      user      @relation(fields: [userId], references: [id], map: "Transaction_userId_fkey")

  @@index([assetId], map: "Transaction_assetId_fkey")
  @@index([userId], map: "Transaction_userId_fkey")
}

model user {
  id             String           @id
  name           String
  email          String           @unique(map: "User_email_key")
  role           String           @default("STANDARD")
  active         Boolean          @default(true)
  createdAt      DateTime         @default(now())
  updatedAt      DateTime
  asset          asset[]
  maintenancelog maintenancelog[]
  transaction    transaction[]
}
