"use strict";
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.routeTree = void 0;
// @ts-nocheck
// noinspection JSUnusedGlobalSymbols
// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.
// Import Routes
const __root_1 = require("./routes/__root");
const settings_1 = require("./routes/settings");
const reports_1 = require("./routes/reports");
const inventory_1 = require("./routes/inventory");
const index_1 = require("./routes/index");
const inventory_add_1 = require("./routes/inventory.add");
const inventory__assetId_1 = require("./routes/inventory.$assetId");
const demo_tanstack_query_1 = require("./routes/demo.tanstack-query");
const table_1 = require("./routes/demo/table");
const demo_store_1 = require("./routes/demo.store");
const api_assets_1 = require("./routes/api.assets");
// Create/Update Routes
const SettingsRoute = settings_1.Route.update({
    id: '/settings',
    path: '/settings',
    getParentRoute: () => __root_1.Route,
});
const ReportsRoute = reports_1.Route.update({
    id: '/reports',
    path: '/reports',
    getParentRoute: () => __root_1.Route,
});
const InventoryRoute = inventory_1.Route.update({
    id: '/inventory',
    path: '/inventory',
    getParentRoute: () => __root_1.Route,
});
const IndexRoute = index_1.Route.update({
    id: '/',
    path: '/',
    getParentRoute: () => __root_1.Route,
});
const InventoryAddRoute = inventory_add_1.Route.update({
    id: '/add',
    path: '/add',
    getParentRoute: () => InventoryRoute,
});
const InventoryAssetIdRoute = inventory__assetId_1.Route.update({
    id: '/$assetId',
    path: '/$assetId',
    getParentRoute: () => InventoryRoute,
});
const DemoTanstackQueryRoute = demo_tanstack_query_1.Route.update({
    id: '/demo/tanstack-query',
    path: '/demo/tanstack-query',
    getParentRoute: () => __root_1.Route,
});
const DemoTableRoute = table_1.Route.update({
    id: '/demo/table',
    path: '/demo/table',
    getParentRoute: () => __root_1.Route,
});
const DemoStoreRoute = demo_store_1.Route.update({
    id: '/demo/store',
    path: '/demo/store',
    getParentRoute: () => __root_1.Route,
});
const ApiAssetsRoute = api_assets_1.Route.update({
    id: '/api/assets',
    path: '/api/assets',
    getParentRoute: () => __root_1.Route,
});
const InventoryRouteChildren = {
    InventoryAssetIdRoute: InventoryAssetIdRoute,
    InventoryAddRoute: InventoryAddRoute,
};
const InventoryRouteWithChildren = InventoryRoute._addFileChildren(InventoryRouteChildren);
const rootRouteChildren = {
    IndexRoute: IndexRoute,
    InventoryRoute: InventoryRouteWithChildren,
    ReportsRoute: ReportsRoute,
    SettingsRoute: SettingsRoute,
    ApiAssetsRoute: ApiAssetsRoute,
    DemoStoreRoute: DemoStoreRoute,
    DemoTableRoute: DemoTableRoute,
    DemoTanstackQueryRoute: DemoTanstackQueryRoute,
};
exports.routeTree = __root_1.Route
    ._addFileChildren(rootRouteChildren)
    ._addFileTypes();
/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.js",
      "children": [
        "/",
        "/inventory",
        "/reports",
        "/settings",
        "/api/assets",
        "/demo/store",
        "/demo/table",
        "/demo/tanstack-query"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/inventory": {
      "filePath": "inventory.tsx",
      "children": [
        "/inventory/$assetId",
        "/inventory/add"
      ]
    },
    "/reports": {
      "filePath": "reports.tsx"
    },
    "/settings": {
      "filePath": "settings.tsx"
    },
    "/api/assets": {
      "filePath": "api.assets.tsx"
    },
    "/demo/store": {
      "filePath": "demo.store.tsx"
    },
    "/demo/table": {
      "filePath": "demo/table.tsx"
    },
    "/demo/tanstack-query": {
      "filePath": "demo.tanstack-query.tsx"
    },
    "/inventory/$assetId": {
      "filePath": "inventory.$assetId.tsx",
      "parent": "/inventory"
    },
    "/inventory/add": {
      "filePath": "inventory.add.tsx",
      "parent": "/inventory"
    }
  }
}
ROUTE_MANIFEST_END */
